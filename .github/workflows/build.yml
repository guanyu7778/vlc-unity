name: Build libVLCUnityPlugin for Android arm64

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-libvlcunify:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Android SDK and NDK
        uses: android-actions/setup-android@v2
        with:
          sdk-version: '8512546'          # 你的 SDK 版本
          ndk-version: '21.4.7075529'    # 你的 NDK 版本

      - name: Add sdkmanager to PATH
        run: echo "${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin" >> $GITHUB_PATH

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y ninja-build meson pkg-config

      - name: Copy prebuilt libs and headers
        run: |
          mkdir -p libs/arm64-v8a
          cp path/to/libvlc.so libs/arm64-v8a/
          cp path/to/libc++_shared.so libs/arm64-v8a/
          # 假设你有 include 目录放 VLC 头文件
          # 确保 include/ 存在且有头文件

      - name: Write Meson cross file
        run: |
          cat > android_arm64_clang.txt <<EOF
          [binaries]
          c = "${ANDROID_NDK_ROOT}/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android21-clang"
          cpp = "${ANDROID_NDK_ROOT}/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android21-clang++"
          ar = "${ANDROID_NDK_ROOT}/toolchains/llvm/prebuilt/linux-x86_64/bin/ar"
          ld = "${ANDROID_NDK_ROOT}/toolchains/llvm/prebuilt/linux-x86_64/bin/ld"
          strip = "${ANDROID_NDK_ROOT}/toolchains/llvm/prebuilt/linux-x86_64/bin/strip"

          [host_machine]
          system = 'android'
          cpu_family = 'aarch64'
          cpu = 'aarch64'
          endian = 'little'
          EOF

      - name: Configure Meson build
        run: |
          meson setup builddir --cross-file=android_arm64_clang.txt \
            -Dlibvlc_path=./libs/arm64-v8a \
            --prefix=$(pwd)/install

      - name: Build libVLCUnityPlugin.so
        run: |
          meson compile -C builddir

      - name: Collect libVLCUnityPlugin.so
        run: |
          mkdir -p release_files
          cp builddir/libVLCUnityPlugin.so release_files/

      - name: Zip and upload
        run: |
          cd release_files
          zip ../vlc-unity-plugin.zip *

      - name: Upload release asset
        uses: softprops/action-gh-release@v2
        with:
          files: vlc-unity-plugin.zip
          tag_name: vlc-unity-plugin-v${{ github.run_number }}
